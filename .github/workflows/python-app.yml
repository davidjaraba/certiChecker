# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr
        python -m spacy download es_core_news_sm
        python -m spacy download en_core_web_sm
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        TESSERACT_PATH: /usr/bin/tesseract
      run: |
        pytest

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Create remote directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}  # opcional, por defecto es 22
        script: |
          mkdir -p /home/${{ secrets.SSH_USERNAME }}/certiChecker
          chown -R ${{ secrets.SSH_USERNAME }}:${{ secrets.SSH_USERNAME }} /home/${{ secrets.SSH_USERNAME }}/certiChecker
          chmod -R 755 /home/${{ secrets.SSH_USERNAME }}/certiChecker

    - name: Copy files via SCP
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}  # Asegúrate de que este puerto sea el correcto. Si es 22, puedes omitir esta línea.
        source: "."
        target: "/home/${{ secrets.SSH_USERNAME }}/certiChecker"
        debug: true

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_USER: ${{ secrets.SSH_USERNAME }}
        SERVER_IP: ${{ secrets.SSH_HOST }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
          cd /home/ubuntu/certiChecker
          python3.12 -m venv venv
          source venv/bin/activate
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr
          sudo apt-get install ffmpeg libsm6 libxext6 -y
          python -m spacy download es_core_news_sm
          python -m spacy download en_core_web_sm
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo systemctl restart certicheckerapi.service
          sudo systemctl restart certicheckerdata.service
        EOF
